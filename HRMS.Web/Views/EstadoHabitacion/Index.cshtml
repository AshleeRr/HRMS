@model IEnumerable<HRMS.Application.DTOs.RoomManagementDto.EstadoHabitacionDtos.EstadoHabitacionDto>

@{
    ViewData["Title"] = "Room Status";
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="bi bi-exclamation-triangle-fill me-2"></i> @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle-fill me-2"></i> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="text-primary"><i class="bi bi-door-open"></i> Room Status List</h1>
        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-plus-lg"></i> Create New
        </a>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover table-bordered">
            <thead class="table-dark text-center">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Descripcion)</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            @if (Model != null && Model.Any())
            {
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Descripcion)</td>
                        <td class="text-center">
                            <a asp-action="Edit" asp-route-id="@item.IdEstadoHabitacion" class="btn btn-warning btn-sm">
                                <i class="bi bi-pencil"></i> Edit
                            </a>
                            <button type="button" class="btn btn-danger btn-sm delete-estado-btn"
                                    data-bs-toggle="modal"
                                    data-bs-target="#deleteModal"
                                    data-id="@item.IdEstadoHabitacion"
                                    data-desc="@item.Descripcion">
                                <i class="bi bi-trash-fill"></i> Delete
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="2" class="text-center">No hay estados de habitación registrados</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

<!-- Modal de confirmación de eliminación -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">Confirmar Eliminación</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="modalErrorContainer" class="alert alert-warning d-none mb-3">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                    <span id="modalErrorMessage"></span>
                </div>

                <p>¿Está seguro que desea eliminar el estado de habitación <span id="estadoDescToDelete" class="fw-bold"></span>?</p>
                <p class="small text-muted">ID de estado: <span id="estadoIdDisplay" class="fw-bold"></span></p>
                <p class="text-danger">Esta acción no se puede deshacer.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle"></i> Cancelar
                </button>
                <form id="deleteForm" asp-action="Delete" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="estadoIdToDelete" name="id" value="" />
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-trash-fill"></i> Eliminar
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('.delete-estado-btn').on('click', function() {
                const estadoId = $(this).data('id');
                const estadoDesc = $(this).data('desc');

                $('#modalErrorContainer').addClass('d-none');
                $('#modalErrorMessage').text('');

                console.log('ID de estado a eliminar:', estadoId);
                console.log('Descripción de estado:', estadoDesc);

                $('#estadoDescToDelete').text(estadoDesc);
                $('#estadoIdDisplay').text(estadoId);
                $('#estadoIdToDelete').val(estadoId);

                // Opcional: Verificar si hay habitaciones asociadas al estado
                $.ajax({
                    url: '/EstadoHabitacion/VerificarHabitacionesAsociadas',
                    type: 'GET',
                    data: { id: estadoId },
                    success: function(response) {
                        if (response.tieneHabitaciones) {
                            $('#modalErrorContainer').removeClass('d-none');
                            $('#modalErrorMessage').text('No se puede eliminar este estado porque tiene habitaciones asociadas.');

                            $('#deleteForm button[type="submit"]').prop('disabled', true);
                        } else {
                            // Habilitar el botón de eliminar
                            $('#deleteForm button[type="submit"]').prop('disabled', false);
                        }
                    },
                    error: function() {
                        console.error('Error al verificar habitaciones asociadas');
                    }
                });
            });

            $('#deleteForm').on('submit', function(e) {
                e.preventDefault();

                const estadoId = $('#estadoIdToDelete').val();
                if (!estadoId) {
                    alert('Error: No se pudo obtener el ID del estado de habitación.');
                    return false;
                }

                // Show loading indicator on button
                const submitButton = $(this).find('button[type="submit"]');
                submitButton.prop('disabled', true).html('<i class="bi bi-hourglass-split"></i> Procesando...');

                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function(response) {
                        // Reset button state
                        submitButton.prop('disabled', false).html('<i class="bi bi-trash-fill"></i> Eliminar');

                        if (response.success) {
                            // IMPORTANT: Close the modal and remove backdrop
                            $('#deleteModal').modal('hide');
                            $('.modal-backdrop').remove();
                            $('body').removeClass('modal-open');
                            $('body').css('overflow', '');
                            $('body').css('padding-right', '');

                            // Add success alert to the page
                            const alertHtml = `
                                <div class="alert alert-success alert-dismissible fade show" role="alert">
                                    <i class="bi bi-check-circle-fill me-2"></i> ${response.message || 'Estado de habitación eliminado correctamente.'}
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                            `;
                            $('.container').first().prepend(alertHtml);

                            // Remove the deleted row with a fade effect
                            $(`button[data-id="${estadoId}"]`).closest('tr').fadeOut(500, function() {
                                $(this).remove();
                            });

                            // If the table is now empty, add a "no records" row
                            if ($('table tbody tr:visible').length === 0) {
                                $('table tbody').append(`
                                    <tr>
                                        <td colspan="2" class="text-center">No hay estados de habitación registrados</td>
                                    </tr>
                                `);
                            }
                        } else {
                            $('#modalErrorContainer').removeClass('d-none');
                            $('#modalErrorMessage').text(response.message || 'No se pudo eliminar el estado de habitación.');
                        }
                    },
                    error: function(xhr) {
                        // Reset button state
                        submitButton.prop('disabled', false).html('<i class="bi bi-trash-fill"></i> Eliminar');

                        $('#modalErrorContainer').removeClass('d-none');

                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            $('#modalErrorMessage').text(xhr.responseJSON.message);
                        } else {
                            $('#modalErrorMessage').text('Ocurrió un error al intentar eliminar el estado de habitación.');
                        }
                    }
                });
            });
        });
    </script>
}